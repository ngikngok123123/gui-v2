-- Membuat Database jika belum ada (opsional)
-- CREATE DATABASE IF NOT EXISTS encrypted_chat_app;
-- USE encrypted_chat_app;

-- Tabel 'users' untuk menyimpan informasi pengguna
CREATE TABLE IF NOT EXISTS users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(255) UNIQUE NOT NULL,
    password_hash VARCHAR(255) NOT NULL,
    public_key TEXT, -- Bisa digunakan untuk enkripsi yang lebih kuat di masa depan
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Tabel 'friendships' untuk mengelola pertemanan antar pengguna
CREATE TABLE IF NOT EXISTS friendships (
    user_id1 INT NOT NULL,
    user_id2 INT NOT NULL,
    status ENUM('pending', 'accepted', 'blocked') DEFAULT 'pending', -- Status permintaan pertemanan
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (user_id1, user_id2), -- Memastikan keunikan kombinasi (user_id1, user_id2)
    FOREIGN KEY (user_id1) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (user_id2) REFERENCES users(id) ON DELETE CASCADE,
    -- Menambahkan constraint untuk memastikan user_id1 selalu lebih kecil dari user_id2
    -- Ini mencegah duplikasi entri (misal A-B dan B-A)
    CHECK (user_id1 < user_id2)
);

-- Tabel 'groups' untuk menyimpan informasi tentang grup chat
CREATE TABLE IF NOT EXISTS groups (
    id INT AUTO_INCREMENT PRIMARY KEY,
    group_name VARCHAR(255) UNIQUE NOT NULL,
    created_by INT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (created_by) REFERENCES users(id) ON DELETE CASCADE
);

-- Tabel 'group_members' untuk mengaitkan pengguna dengan grup
CREATE TABLE IF NOT EXISTS group_members (
    group_id INT NOT NULL,
    user_id INT NOT NULL,
    joined_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (group_id, user_id), -- Komposit primary key
    FOREIGN KEY (group_id) REFERENCES groups(id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

-- Tabel 'messages' untuk menyimpan pesan, mendukung pesan pribadi dan grup
CREATE TABLE IF NOT EXISTS messages (
    id INT AUTO_INCREMENT PRIMARY KEY,
    sender_id INT NOT NULL,
    receiver_id INT NULL, -- NULL jika pesan grup
    group_id INT NULL, -- NULL jika pesan pribadi
    encrypted_message TEXT NOT NULL, -- Pesan terenkripsi disimpan di sini
    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (sender_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (receiver_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (group_id) REFERENCES groups(id) ON DELETE CASCADE,
    -- Pastikan setidaknya receiver_id atau group_id diisi (satu null, satu tidak)
    CHECK ((receiver_id IS NOT NULL AND group_id IS NULL) OR (receiver_id IS NULL AND group_id IS NOT NULL))
);

-- Tabel untuk menyimpan log aktivitas server (opsional, untuk debugging/auditing)
CREATE TABLE IF NOT EXISTS activity_log (
    id INT AUTO_INCREMENT PRIMARY KEY,
    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    action TEXT NOT NULL,
    user_id INT NULL,
    details TEXT
);